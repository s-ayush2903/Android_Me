[1mdiff --cc app/src/main/java/com/example/android/android_me/ui/MainActivity.java[m
[1mindex aa73dfd,502393c..0000000[m
mode 100755,100755..100644[m
[1m--- a/app/src/main/java/com/example/android/android_me/ui/MainActivity.java[m
[1m+++ b/app/src/main/java/com/example/android/android_me/ui/MainActivity.java[m
[36m@@@ -1,185 -1,93 +1,47 @@@[m
  /*[m
[31m--* Copyright (C) 2017 The Android Open Source Project[m
[31m--*[m
[31m--* Licensed under the Apache License, Version 2.0 (the "License");[m
[31m--* you may not use this file except in compliance with the License.[m
[31m--* You may obtain a copy of the License at[m
[31m--*[m
[31m--*  	http://www.apache.org/licenses/LICENSE-2.0[m
[31m--*[m
[31m--* Unless required by applicable law or agreed to in writing, software[m
[31m--* distributed under the License is distributed on an "AS IS" BASIS,[m
[31m--* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m--* See the License for the specific language governing permissions and[m
[31m--* limitations under the License.[m
[31m--*/[m
[32m++ * Copyright (C) 2017 The Android Open Source Project[m
[32m++ *[m
[32m++ * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m++ * you may not use this file except in compliance with the License.[m
[32m++ * You may obtain a copy of the License at[m
[32m++ *[m
[32m++ *  	http://www.apache.org/licenses/LICENSE-2.0[m
[32m++ *[m
[32m++ * Unless required by applicable law or agreed to in writing, software[m
[32m++ * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m++ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m++ * See the License for the specific language governing permissions and[m
[32m++ * limitations under the License.[m
[32m++ */[m
  [m
  package com.example.android.android_me.ui;[m
  [m
[31m--import android.content.Intent;[m
  import android.os.Bundle;[m
[31m- import android.support.v4.app.FragmentManager;[m
  import android.support.v7.app.AppCompatActivity;[m
[31m--import android.view.View;[m
[31m--import android.widget.Button;[m
[31m- import android.widget.GridView;[m
  import android.widget.Toast;[m
  [m
  import com.example.android.android_me.R;[m
  [m
  // This activity is responsible for displaying the master list of all images[m
  // Implement the MasterListFragment callback, OnImageClickListener[m
[31m--public class MainActivity extends AppCompatActivity implements MasterListFragment.OnImageClickListener{[m
[31m--[m
[31m--    // Variables to store the values for the list index of the selected images[m
[31m--    // The default value will be index = 0[m
[31m--    private int headIndex;[m
[31m--    private int bodyIndex;[m
[31m--    private int legIndex;[m
[31m- [m
[31m-     // Track whether to display a two-pane or single-pane UI[m
[31m-     // A single-pane display refers to phone screens, and two-pane to larger tablet screens[m
[31m-     private boolean mTwoPane;[m
[31m--[m
[32m++public class MainActivity extends AppCompatActivity implements MasterListFragment.onImageClickListener {[m
  [m
      @Override[m
      protected void onCreate(Bundle savedInstanceState) {[m
          super.onCreate(savedInstanceState);[m
          setContentView(R.layout.activity_main);[m
[31m- [m
[31m-         // Determine if you're creating a two-pane or single-pane display[m
[31m-         if(findViewById(R.id.android_me_linear_layout) != null) {[m
[31m-             // This LinearLayout will only initially exist in the two-pane tablet case[m
[31m-             mTwoPane = true;[m
[31m- [m
[31m-             // Change the GridView to space out the images more on tablet[m
[31m-             GridView gridView = (GridView) findViewById(R.id.images_grid_view);[m
[31m-             gridView.setNumColumns(2);[m
[31m- [m
[31m-             // Getting rid of the "Next" button that appears on phones for launching a separate activity[m
[31m-             Button nextButton = (Button) findViewById(R.id.next_button);[m
[31m-             nextButton.setVisibility(View.GONE);[m
[31m- [m
[31m-             if(savedInstanceState == null) {[m
[31m-                 // In two-pane mode, add initial BodyPartFragments to the screen[m
[31m-                 FragmentManager fragmentManager = getSupportFragmentManager();[m
[31m- [m
[31m-                 // Creating a new head fragment[m
[31m-                 BodyPartFragment headFragment = new BodyPartFragment();[m
[31m-                 headFragment.setImageIds(AndroidImageAssets.getHeads());[m
[31m-                 // Add the fragment to its container using a transaction[m
[31m-                 fragmentManager.beginTransaction()[m
[31m-                         .add(R.id.head_container, headFragment)[m
[31m-                         .commit();[m
[31m- [m
[31m-                 // New body fragment[m
[31m-                 BodyPartFragment bodyFragment = new BodyPartFragment();[m
[31m-                 bodyFragment.setImageIds(AndroidImageAssets.getBodies());[m
[31m-                 fragmentManager.beginTransaction()[m
[31m-                         .add(R.id.body_container, bodyFragment)[m
[31m-                         .commit();[m
[31m- [m
[31m-                 // New leg fragment[m
[31m-                 BodyPartFragment legFragment = new BodyPartFragment();[m
[31m-                 legFragment.setImageIds(AndroidImageAssets.getLegs());[m
[31m-                 fragmentManager.beginTransaction()[m
[31m-                         .add(R.id.leg_container, legFragment)[m
[31m-                         .commit();[m
[31m-             }[m
[31m-         } else {[m
[31m-             // We're in single-pane mode and displaying fragments on a phone in separate activities[m
[31m-             mTwoPane = false;[m
[31m-         }[m
[31m--[m
      }[m
  [m
[31m--    // Define the behavior for onImageSelected[m
      public void onImageSelected(int position) {[m
[31m--        // Create a Toast that displays the position that was clicked[m
[31m--        Toast.makeText(this, "Position clicked = " + position, Toast.LENGTH_SHORT).show();[m
[31m- [m
[31m-         // bodyPartNumber will be = 0 for the head fragment, 1 for the body, and 2 for the leg fragment[m
[31m-         // Dividing by 12 gives us these integer values because each list of images resources has a size of 12[m
[31m-         int bodyPartNumber = position /12;[m
[31m- [m
[31m-         // Store the correct list index no matter where in the image list has been clicked[m
[31m-         // This ensures that the index will always be a value between 0-11[m
[31m-         int listIndex = position - 12*bodyPartNumber;[m
[31m- [m
[31m-         // Handle the two-pane case and replace existing fragments right when a new image is selected from the master list[m
[31m-         if (mTwoPane) {[m
[31m-             // Create two=pane interaction[m
[31m--[m
[31m-             BodyPartFragment newFragment = new BodyPartFragment();[m
[31m -        // Based on where a user has clicked, store the selected list index for the head, body, and leg BodyPartFragments[m
[32m++        Toast.makeText(this, "Position Clicked " + position, Toast.LENGTH_SHORT).show();[m
  [m
[31m-             // Set the currently displayed item for the correct body part fragment[m
[31m-             switch (bodyPartNumber) {[m
[31m-                 case 0:[m
[31m-                     // A head image has been clicked[m
[31m-                     // Give the correct image resources to the new fragment[m
[31m-                     newFragment.setImageIds(AndroidImageAssets.getHeads());[m
[31m-                     newFragment.setListIndex(listIndex);[m
[31m-                     // Replace the old head fragment with a new one[m
[31m-                     getSupportFragmentManager().beginTransaction()[m
[31m-                             .replace(R.id.head_container, newFragment)[m
[31m-                             .commit();[m
[31m-                     break;[m
[31m-                 case 1:[m
[31m-                     newFragment.setImageIds(AndroidImageAssets.getBodies());[m
[31m-                     newFragment.setListIndex(listIndex);[m
[31m-                     getSupportFragmentManager().beginTransaction()[m
[31m-                             .replace(R.id.body_container, newFragment)[m
[31m-                             .commit();[m
[31m-                     break;[m
[31m-                 case 2:[m
[31m-                     newFragment.setImageIds(AndroidImageAssets.getLegs());[m
[31m-                     newFragment.setListIndex(listIndex);[m
[31m-                     getSupportFragmentManager().beginTransaction()[m
[31m-                             .replace(R.id.leg_container, newFragment)[m
[31m-                             .commit();[m
[31m-                     break;[m
[31m-                 default:[m
[31m-                     break;[m
[31m-             }[m
[31m-         } else {[m
[31m -        // bodyPartNumber will be = 0 for the head fragment, 1 for the body, and 2 for the leg fragment[m
[31m -        // Dividing by 12 gives us these integer values because each list of images resources has a size of 12[m
[31m -        int bodyPartNumber = position /12;[m
[31m--[m
[31m-             // Handle the single-pane phone case by passing information in a Bundle attached to an Intent[m
[31m -        // Store the correct list index no matter where in the image list has been clicked[m
[31m -        // This ensures that the index will always be a value between 0-11[m
[31m -        int listIndex = position - 12*bodyPartNumber;[m
[31m--[m
[31m-             switch (bodyPartNumber) {[m
[31m-                 case 0:[m
[31m-                     headIndex = listIndex;[m
[31m-                     break;[m
[31m-                 case 1:[m
[31m-                     bodyIndex = listIndex;[m
[31m-                     break;[m
[31m-                 case 2:[m
[31m-                     legIndex = listIndex;[m
[31m-                     break;[m
[31m-                 default:[m
[31m-                     break;[m
[31m-             }[m
[31m -        // Set the currently displayed item for the correct body part fragment[m
[31m -        switch(bodyPartNumber) {[m
[31m -            case 0: headIndex = listIndex;[m
[31m -                break;[m
[31m -            case 1: bodyIndex = listIndex;[m
[31m -                break;[m
[31m -            case 2: legIndex = listIndex;[m
[31m -                break;[m
[31m -            default: break;[m
[31m -        }[m
[32m++    }[m
  [m
[31m-             // Put this information in a Bundle and attach it to an Intent that will launch an AndroidMeActivity[m
[31m-             Bundle b = new Bundle();[m
[31m-             b.putInt("headIndex", headIndex);[m
[31m-             b.putInt("bodyIndex", bodyIndex);[m
[31m-             b.putInt("legIndex", legIndex);[m
[31m -        // Put this information in a Bundle and attach it to an Intent that will launch an AndroidMeActivity[m
[31m -        Bundle b = new Bundle();[m
[31m -        b.putInt("headIndex", headIndex);[m
[31m -        b.putInt("bodyIndex", bodyIndex);[m
[31m -        b.putInt("legIndex", legIndex);[m
[32m++    // TODO (2) Based on where a user has clicked, store the selected list index for the head, body, and leg BodyPartFragments[m
  [m
[31m-             // Attach the Bundle to an intent[m
[31m-             final Intent intent = new Intent(this, AndroidMeActivity.class);[m
[31m-             intent.putExtras(b);[m
[31m -        // Attach the Bundle to an intent[m
[31m -        final Intent intent = new Intent(this, AndroidMeActivity.class);[m
[31m -        intent.putExtras(b);[m
[32m++    // TODO (3) Put this information in a Bundle and attach it to an Intent that will launch an AndroidMeActivity[m
  [m
[31m-             // The "Next" button launches a new AndroidMeActivity[m
[31m-             Button nextButton = (Button) findViewById(R.id.next_button);[m
[31m-             nextButton.setOnClickListener(new View.OnClickListener() {[m
[31m-                 @Override[m
[31m-                 public void onClick(View view) {[m
[31m-                     startActivity(intent);[m
[31m-                 }[m
[31m-             });[m
[31m-         }[m
[31m -        // The "Next" button launches a new AndroidMeActivity[m
[31m -        Button nextButton = (Button) findViewById(R.id.next_button);[m
[31m -        nextButton.setOnClickListener(new View.OnClickListener() {[m
[31m -            @Override[m
[31m -            public void onClick(View view) {[m
[31m -                startActivity(intent);[m
[31m -            }[m
[31m -        });[m
[32m++    // TODO (4) Get a reference to the "Next" button and launch the intent when this button is clicked[m
  [m
[31m--    }[m
  [m
  }[m
[1mdiff --git a/README.md b/README.md[m
[1mindex ddc801c..d901a1e 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -3,96 +3,3 @@[m [mApp that lets you style your own Android! This app uses Fragments to create a fl[m
 [m
 This is the toy app for the Fragments lesson of the [Advanced Android App Development course on Udacity](https://www.udacity.com/course/advanced-android-app-development--ud855).[m
 [m
[31m-## How to use this repo while taking the course[m
[31m-[m
[31m-Each code repository in this class has a chain of commits that looks like this:[m
[31m-[m
[31m-![listofcommits](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe2e_listofcommits/listofcommits.png)[m
[31m-[m
[31m-These commits show every step you'll take to create the app. They include **Exercise** commits and **Solution** commits. [m
[31m-[m
[31m-Exercise commits contain instructions for completing the exercise, while solution commits show the completed exercise. You can tell what a commit is by looking at its commit message. [m
[31m-[m
[31m-For example, **TFCM.01-Exercise-AddGradleDependencies** is the first code step in the Firebase Cloud Messaging (FCM) lesson. This is the exercise commit, and the exercise is called Add Gradle Dependencies.[m
[31m-[m
[31m-Each commit also has a **branch** associated with it of the same name as the commit message, seen below:[m
[31m-[m
[31m-![branches](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590390fe_branches-ud855/branches-ud855.png[m
[31m-)[m
[31m-Access all branches from this tab[m
[31m-[m
[31m-![listofbranches](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58befe76_listofbranches/listofbranches.png[m
[31m-)[m
[31m-[m
[31m-[m
[31m-![branchesdropdown](https://d17h27t6h515a5.cloudfront.net/topher/2017/April/590391a3_branches-dropdown-ud855/branches-dropdown-ud855.png[m
[31m-)[m
[31m-[m
[31m-[m
[31m-The branches are also accessible from the drop-down in the "Code" tab[m
[31m-[m
[31m-[m
[31m-## Working with the Course Code[m
[31m-[m
[31m-Here are the basic steps for working with and completing exercises in the repo. This information is linked whenever you start a new exercise project, so don't feel you need to memorize all of this! In fact, skim it now, make sure that you know generally how to do the different tasks, and then come back when you start your first exercise. [m
[31m-[m
[31m-The basic steps are:[m
[31m-[m
[31m-1. Clone the repo[m
[31m-2. Checkout the exercise branch[m
[31m-3. Find and complete the TODOs[m
[31m-4. Optionally commit your code changes[m
[31m-5. Compare with the solution[m
[31m-[m
[31m-[m
[31m-**Step 1: Clone the repo**[m
[31m-[m
[31m-As you go through the course, you'll be instructed to clone the different exercise repositories, so you don't need to set these up now. You can clone a repository from github in a folder of your choice with the command:[m
[31m-[m
[31m-```bash[m
[31m-git clone https://github.com/udacity/REPOSITORY_NAME.git[m
[31m-```[m
[31m-[m
[31m-**Step 2: Checkout the exercise branch**[m
[31m-[m
[31m-As you do different exercises in the code, you'll be told which exercise you're on, as seen below:[m
[31m-![exerciseexample](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf0087_exerciseexample/exerciseexample.png[m
[31m-)[m
[31m-[m
[31m-To complete an exercise, you'll want to check out the branch associated with that exercise. For the exercise above, the command to check out that branch would be:[m
[31m-[m
[31m-```bash[m
[31m-git checkout TFCM.01-Exercise-AddGradleDependencies[m
[31m-```[m
[31m-[m
[31m-**Step 3: Find and complete the TODOs**[m
[31m-[m
[31m-This branch should always have **Exercise** in the title. Once you've checked out the branch, you'll have the code in the exact state you need. You'll even have TODOs, which are special comments that tell you all the steps you need to complete the exercise. You can easily navigate to all the TODOs using Android Studio's TODO tool. To open the TODO tool, click the button at the bottom of the screen that says TODO. This will display a list of all comments with TODO in the project. [m
[31m-[m
[31m-We've numbered the TODO steps so you can do them in order:[m
[31m-![todos](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00e7_todos/todos.png[m
[31m-)[m
[31m-[m
[31m-**Step 4: Optionally commit your code changes**[m
[31m-[m
[31m-After You've completed the TODOs, you can optionally commit your changes. This will allow you to see the code you wrote whenever you return to the branch. The following git code will add and save **all** your changes.[m
[31m-[m
[31m-```bash[m
[31m-git add .[m
[31m-git commit -m "Your commit message"[m
[31m-```[m
[31m-[m
[31m-**Step 5: Compare with the solution**[m
[31m-[m
[31m-Most exercises will have a list of steps for you to check off in the classroom. Once you've checked these off, you'll see a pop up window with a link to the solution code. Note the **Diff** link:[m
[31m-[m
[31m-![solutionwindow](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf00f9_solutionwindow/solutionwindow.png[m
[31m-)[m
[31m-[m
[31m-The **Diff** link will take you to a Github diff as seen below:[m
[31m-![diff](https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58bf0108_diffsceenshot/diffsceenshot.png[m
[31m-)[m
[31m-[m
[31m-All of the code that was added in the solution is in green, and the removed code (which will usually be the TODO comments) is in red. [m
[31m-## Report Issues[m
[31m-Notice any issues with a repository? Please file a github issue in the repository.[m
[1mdiff --git a/app/src/androidTest/java/com/example/android/android_me/ExampleInstrumentedTest.java b/app/src/androidTest/java/com/example/android/android_me/ExampleInstrumentedTest.java[m
[1mindex 1f3f126..81fb0f1 100644[m
[1m--- a/app/src/androidTest/java/com/example/android/android_me/ExampleInstrumentedTest.java[m
[1m+++ b/app/src/androidTest/java/com/example/android/android_me/ExampleInstrumentedTest.java[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m
 package com.example.android.android_me;[m
 [m
 import android.content.Context;[m
[36m@@ -23,4 +24,4 @@[m [mpublic class ExampleInstrumentedTest {[m
 [m
         assertEquals("com.example.android.android_me", appContext.getPackageName());[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/android/android_me/ui/AndroidMeActivity.java b/app/src/main/java/com/example/android/android_me/ui/AndroidMeActivity.java[m
[1mindex 07f500c..203e8fd 100644[m
[1m--- a/app/src/main/java/com/example/android/android_me/ui/AndroidMeActivity.java[m
[1m+++ b/app/src/main/java/com/example/android/android_me/ui/AndroidMeActivity.java[m
[36m@@ -1,24 +1,27 @@[m
 /*[m
[31m-* Copyright (C) 2017 The Android Open Source Project[m
[31m-*[m
[31m-* Licensed under the Apache License, Version 2.0 (the "License");[m
[31m-* you may not use this file except in compliance with the License.[m
[31m-* You may obtain a copy of the License at[m
[31m-*[m
[31m-*  	http://www.apache.org/licenses/LICENSE-2.0[m
[31m-*[m
[31m-* Unless required by applicable law or agreed to in writing, software[m
[31m-* distributed under the License is distributed on an "AS IS" BASIS,[m
[31m-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m-* See the License for the specific language governing permissions and[m
[31m-* limitations under the License.[m
[31m-*/[m
[32m+[m[32m * Copyright (C) 2017 The Android Open Source Project[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *  	http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
 [m
 package com.example.android.android_me.ui;[m
 [m
[32m+[m[32mimport android.support.v4.app.Fragment;[m
 import android.support.v4.app.FragmentManager;[m
 import android.support.v7.app.AppCompatActivity;[m
 import android.os.Bundle;[m
[32m+[m[32mimport android.widget.FrameLayout;[m
[32m+[m[32mimport android.widget.ImageView;[m
 [m
 import com.example.android.android_me.R;[m
 import com.example.android.android_me.data.AndroidImageAssets;[m
[36m@@ -32,50 +35,21 @@[m [mpublic class AndroidMeActivity extends AppCompatActivity {[m
         super.onCreate(savedInstanceState);[m
         setContentView(R.layout.activity_android_me);[m
 [m
[31m-        // Only create new fragments when there is no previously saved state[m
[31m-        if(savedInstanceState == null) {[m
[32m+[m[32m        if (savedInstanceState == null) {[m
[32m+[m[32m            //Now make an instance under the onCreate method to display he fragment[m
 [m
[31m-            // Retrieve list index values that were sent through an intent; use them to display the desired Android-Me body part image[m
[31m-                // Use setListindex(int index) to set the list index for all BodyPartFragments[m
[31m-[m
[31m-            // Create a new head BodyPartFragment[m
[32m+[m[32m            /**Now declare a new fragment[m
[32m+[m[32m             */[m
             BodyPartFragment headFragment = new BodyPartFragment();[m
 [m
[31m-            // Set the list of image id's for the head fragment and set the position to the second image in the list[m
[31m-            headFragment.setImageIds(AndroidImageAssets.getHeads());[m
[31m-[m
[31m-            // Get the correct index to access in the array of head images from the intent[m
[31m-            // Set the default value to 0[m
[31m-            int headIndex = getIntent().getIntExtra("headIndex", 0);[m
[31m-            headFragment.setListIndex(headIndex);[m
[31m-[m
[31m-            // Add the fragment to its container using a FragmentManager and a Transaction[m
[32m+[m[32m            //Now Obtain support from FragmentManager[m
             FragmentManager fragmentManager = getSupportFragmentManager();[m
[32m+[m[32m            fragmentManager.beginTransaction().add(R.id.head_container, headFragment).commit();[m
 [m
[31m-            fragmentManager.beginTransaction()[m
[31m-                    .add(R.id.head_container, headFragment)[m
[31m-                    .commit();[m
[31m-[m
[31m-            // Create and display the body and leg BodyPartFragments[m
[31m-[m
[32m+[m[32m            /** Now do the same for body and legs fragment */[m
             BodyPartFragment bodyFragment = new BodyPartFragment();[m
[31m-            bodyFragment.setImageIds(AndroidImageAssets.getBodies());[m
[31m-            int bodyIndex = getIntent().getIntExtra("bodyIndex", 0);[m
[31m-            bodyFragment.setListIndex(bodyIndex);[m
[31m-[m
[31m-            fragmentManager.beginTransaction()[m
[31m-                    .add(R.id.body_container, bodyFragment)[m
[31m-                    .commit();[m
[31m-[m
[31m-            BodyPartFragment legFragment = new BodyPartFragment();[m
[31m-            legFragment.setImageIds(AndroidImageAssets.getLegs());[m
[31m-            int legIndex = getIntent().getIntExtra("legIndex", 0);[m
[31m-            legFragment.setListIndex(legIndex);[m
[31m-[m
[31m-            fragmentManager.beginTransaction()[m
[31m-                    .add(R.id.leg_container, legFragment)[m
[31m-                    .commit();[m
[32m+[m[32m            FragmentManager fragmentb = getSupportFragmentManager();[m
[32m+[m[32m            fragmentb.beginTransaction().add(R.id.body_container, bodyFragment).commit();[m
         }[m
[31m-[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/android/android_me/ui/BodyPartFragment.java b/app/src/main/java/com/example/android/android_me/ui/BodyPartFragment.java[m
[1mindex 225bdb0..918317a 100644[m
[1m--- a/app/src/main/java/com/example/android/android_me/ui/BodyPartFragment.java[m
[1m+++ b/app/src/main/java/com/example/android/android_me/ui/BodyPartFragment.java[m
[36m@@ -1,21 +1,6 @@[m
[31m-/*[m
[31m-* Copyright (C) 2017 The Android Open Source Project[m
[31m-*[m
[31m-* Licensed under the Apache License, Version 2.0 (the "License");[m
[31m-* you may not use this file except in compliance with the License.[m
[31m-* You may obtain a copy of the License at[m
[31m-*[m
[31m-*  	http://www.apache.org/licenses/LICENSE-2.0[m
[31m-*[m
[31m-* Unless required by applicable law or agreed to in writing, software[m
[31m-* distributed under the License is distributed on an "AS IS" BASIS,[m
[31m-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m-* See the License for the specific language governing permissions and[m
[31m-* limitations under the License.[m
[31m-*/[m
[31m-[m
 package com.example.android.android_me.ui;[m
 [m
[32m+[m[32mimport android.nfc.Tag;[m
 import android.os.Bundle;[m
 import android.support.v4.app.Fragment;[m
 import android.util.Log;[m
[36m@@ -23,98 +8,96 @@[m [mimport android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
 import android.widget.ImageView;[m
[32m+[m[32mimport android.widget.Toast;[m
 [m
 import com.example.android.android_me.R;[m
[32m+[m[32mimport com.example.android.android_me.data.AndroidImageAssets;[m
 [m
 import java.util.ArrayList;[m
 import java.util.List;[m
 [m
 public class BodyPartFragment extends Fragment {[m
[32m+[m[32m    private List<Integer> mImageIds;[m
[32m+[m[32m    private int mIndex;[m
 [m
[31m-    // Final Strings to store state information about the list of images and list index[m
[32m+[m[32m    //final variables to store the info aboout the list of images and index[m
     public static final String IMAGE_ID_LIST = "image_ids";[m
     public static final String LIST_INDEX = "list_index";[m
 [m
[31m-    // Tag for logging[m
[31m-    private static final String TAG = "BodyPartFragment";[m
[31m-[m
[31m-    // Variables to store a list of image resources and the index of the image that this fragment displays[m
[31m-    private List<Integer> mImageIds;[m
[31m-    private int mListIndex;[m
 [m
     /**[m
[31m-     * Mandatory empty constructor for the fragment manager to instantiate the fragment[m
[32m+[m[32m     * This empty constructor is necessary or what we can say is required to call the method[m
      */[m
     public BodyPartFragment() {[m
     }[m
 [m
     /**[m
[31m-     * Inflates the fragment layout file and sets the correct resource for the image to display[m
[32m+[m[32m     * Now override the predefined function(method) to set a view which inflates the desired layout using[m
[32m+[m[32m     * the available image resources in the drawable folder[m
      */[m
     @Override[m
[32m+[m
[32m+[m
[32m+[m
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {[m
 [m
[31m-        // Load the saved state (the list of images and list index) if there is one[m
[31m-        if(savedInstanceState != null) {[m
[31m-            mImageIds = savedInstanceState.getIntegerArrayList(IMAGE_ID_LIST);[m
[31m-            mListIndex = savedInstanceState.getInt(LIST_INDEX);[m
[31m-        }[m
 [m
[31m-        // Inflate the Android-Me fragment layout[m
[32m+[m[32m        //Now inflate the Android_Me Fragment Layout[m
         View rootView = inflater.inflate(R.layout.fragment_body_part, container, false);[m
 [m
[31m-        // Get a reference to the ImageView in the fragment layout[m
[31m-        final ImageView imageView = (ImageView) rootView.findViewById(R.id.body_part_image_view);[m
 [m
[31m-        // If a list of image ids exists, set the image resource to the correct item in that list[m
[31m-        // Otherwise, create a Log statement that indicates that the list was not found[m
[31m-        if(mImageIds != null){[m
[31m-            // Set the image resource to the list item at the stored index[m
[31m-            imageView.setImageResource(mImageIds.get(mListIndex));[m
[32m+[m[32m        //Now find out the image that is supposed to be displayed on this layout[m
[32m+[m[32m        final ImageView imageview = (ImageView) rootView.findViewById(R.id.body_part_image_view);[m
 [m
[31m-            // Set a click listener on the image view[m
[31m-            imageView.setOnClickListener(new View.OnClickListener() {[m
[32m+[m
[32m+[m[32m        /**Now set this image on the screen(the image is ready to be displayed[m
[32m+[m[32m         *       * but it won't be displayed until the corresponding command is not found)[m
[32m+[m[32m         *      * (by performing only the code given below image is not going to be displayed)[m
[32m+[m[32m         *[m
[32m+[m[32m         imageview.setImageResource(AndroidImageAssets.getBodies().get(0));[m
[32m+[m[32m         //by this code all the imageviews(selected so far) will be displayed on the screen */[m
[32m+[m
[32m+[m
[32m+[m[32m        //if a list of images exists and then set it to the correct image-index[m
[32m+[m[32m        if (mImageIds != null) {[m
[32m+[m[32m            imageview.setImageResource(mImageIds.get(mIndex));          //Set an onClickListener on the imageviews[m
[32m+[m[32m            imageview.setOnClickListener(new View.OnClickListener() {[m
                 @Override[m
                 public void onClick(View view) {[m
[31m-                    // Increment position as long as the index remains <= the size of the image ids list[m
[31m-                    if(mListIndex < mImageIds.size()-1) {[m
[31m-                        mListIndex++;[m
[32m+[m[32m                    //increase the index of the image as long as it is less than or equal to the size of image ids list[m
[32m+[m[32m                    if (mIndex < mImageIds.size() - 1) {[m
[32m+[m[32m                        mIndex++;[m
[32m+[m[32m                        //if the index reaches to its maximum then, on next click set j it to zero[m
                     } else {[m
[31m-                        // The end of list has been reached, so return to beginning index[m
[31m-                        mListIndex = 0;[m
[32m+[m[32m                        mIndex = 0;[m
                     }[m
[31m-                    // Set the image resource to the new list item[m
[31m-                    imageView.setImageResource(mImageIds.get(mListIndex));[m
[32m+[m[32m                    imageview.setImageResource(mImageIds.get(mIndex));[m
                 }[m
             });[m
[31m-[m
[32m+[m[32m            //else generate a toast[m
         } else {[m
[31m-            Log.v(TAG, "This fragment has a null list of image id's");[m
[32m+[m[32m            Toast.makeText(getContext(), "File not Found!!!", Toast.LENGTH_SHORT).show();[m
         }[m
 [m
[31m-        // Return the rootView[m
         return rootView;[m
     }[m
 [m
[31m-    // Setter methods for keeping track of the list images this fragment can display and which image[m
[31m-    // in the list is currently being displayed[m
[31m-[m
[31m-    public void setImageIds(List<Integer> imageIds) {[m
[31m-        mImageIds = imageIds;[m
[32m+[m[32m    public void setImageIds(List<Integer> ImageIds) {[m
[32m+[m[32m        mImageIds = ImageIds;[m
     }[m
 [m
[31m-    public void setListIndex(int index) {[m
[31m-        mListIndex = index;[m
[32m+[m[32m    public void setListIndex(int Index) {[m
[32m+[m[32m        mIndex = Index;[m
     }[m
 [m
     /**[m
[31m-     * Save the current state of this fragment[m
[32m+[m[32m     * By doing so we are saving the current state of the fragment[m
[32m+[m[32m     * so that it does not get restored when orientation is changed from vertical to horizontal or vice versa[m
[32m+[m[32m     * @Bundle it refers that the current state reached so far is being bundled[m
      */[m
     @Override[m
     public void onSaveInstanceState(Bundle currentState) {[m
         currentState.putIntegerArrayList(IMAGE_ID_LIST, (ArrayList<Integer>) mImageIds);[m
[31m-        currentState.putInt(LIST_INDEX, mListIndex);[m
[32m+[m[32m        currentState.putInt(LIST_INDEX, mIndex);[m
     }[m
[31m-[m
[31m-[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_android_me.xml b/app/src/main/res/layout/activity_android_me.xml[m
[1mindex c65bc72..3bbade5 100644[m
[1m--- a/app/src/main/res/layout/activity_android_me.xml[m
[1m+++ b/app/src/main/res/layout/activity_android_me.xml[m
[36m@@ -1,5 +1,4 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<!--Copyright (C) 2017 The Android Open Source Project[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?><!--Copyright (C) 2017 The Android Open Source Project[m
  Licensed under the Apache License, Version 2.0 (the "License");[m
  you may not use this file except in compliance with the License.[m
  You may obtain a copy of the License at[m
[36m@@ -10,8 +9,7 @@[m
  See the License for the specific language governing permissions and[m
  limitations under the License.-->[m
 [m
[31m-<ScrollView[m
[31m-    xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"[m
     xmlns:tools="http://schemas.android.com/tools"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent"[m
[36m@@ -24,31 +22,26 @@[m
         android:layout_height="wrap_content"[m
         android:background="@android:color/white"[m
         android:orientation="vertical"[m
[31m-        android:paddingBottom="@dimen/activity_vertical_margin"[m
         android:paddingLeft="@dimen/activity_horizontal_margin"[m
[32m+[m[32m        android:paddingTop="@dimen/activity_vertical_margin"[m
         android:paddingRight="@dimen/activity_horizontal_margin"[m
[31m-        android:paddingTop="@dimen/activity_vertical_margin">[m
[32m+[m[32m        android:paddingBottom="@dimen/activity_vertical_margin">[m
 [m
[31m-[m
[31m-        <!-- Three containers for each Android-Me body part -->[m
[31m-        <!-- This container holds the head BodyPartFragment of the custom Android-Me image -->[m
[31m-        <FrameLayout android:id="@+id/head_container"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="180dp"[m
[31m-        android:scaleType="centerInside"/>[m
[31m-[m
[31m-        <!-- The remaining containers for the body and leg BodyPartFragments -->[m
[31m-        <FrameLayout android:id="@+id/body_container"[m
[32m+[m[32m        <!--Now create a container to contain the Body_part fragment and then go to AndroidMeActivity.java-->[m
[32m+[m[32m        <FrameLayout[m
[32m+[m[32m            android:id="@+id/body_container"[m
             android:layout_width="match_parent"[m
             android:layout_height="180dp"[m
[31m-            android:scaleType="centerInside"/>[m
[32m+[m[32m            android:scaleType="centerInside" />[m
 [m
[31m-        <FrameLayout android:id="@+id/leg_container"[m
[32m+[m
[32m+[m[32m        <!--Now make containers for remaining parts as well-->[m
[32m+[m[32m        <FrameLayout[m
[32m+[m[32m            android:id="@+id/head_container"[m
             android:layout_width="match_parent"[m
             android:layout_height="180dp"[m
[31m-            android:scaleType="centerInside"/>[m
[31m-[m
[32m+[m[32m            android:scaleType="centerInside" />[m
 [m
[31m-    </LinearLayout>[m
[32m+[m[32m         </LinearLayout>[m
 [m
 </ScrollView>[m
[1mdiff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml[m
[1mindex 41930be..c6e2315 100755[m
[1m--- a/app/src/main/res/layout/activity_main.xml[m
[1m+++ b/app/src/main/res/layout/activity_main.xml[m
[36m@@ -16,6 +16,4 @@[m
     android:id="@+id/master_list_fragment"[m
     android:name="com.example.android.android_me.ui.MasterListFragment"[m
     android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent" />[m
[31m-[m
[31m-[m
[32m+[m[32m    android:layout_height="match_parent" />[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_body_part.xml b/app/src/main/res/layout/fragment_body_part.xml[m
[1mindex 1455ea0..3fb1feb 100644[m
[1m--- a/app/src/main/res/layout/fragment_body_part.xml[m
[1m+++ b/app/src/main/res/layout/fragment_body_part.xml[m
[36m@@ -1,19 +1,9 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
[31m-<!--Copyright (C) 2017 The Android Open Source Project[m
[31m- Licensed under the Apache License, Version 2.0 (the "License");[m
[31m- you may not use this file except in compliance with the License.[m
[31m- You may obtain a copy of the License at[m
[31m-  	http://www.apache.org/licenses/LICENSE-2.0[m
[31m- Unless required by applicable law or agreed to in writing, software[m
[31m- distributed under the License is distributed on an "AS IS" BASIS,[m
[31m- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m- See the License for the specific language governing permissions and[m
[31m- limitations under the License.-->[m
 [m
[31m-<!-- This fragment layout displays just one image of an Android-Me body part -->[m
[31m-<ImageView[m
[31m-    xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m<!--Fragment that displays body part image view-->[m
[32m+[m[32m<ImageView xmlns:android="http://schemas.android.com/apk/res/android"[m
     android:id="@+id/body_part_image_view"[m
[32m+[m[32m    android:src="@drawable/body1"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent">[m
 [m
[1mdiff --git a/app/src/main/res/layout/fragment_master_list.xml b/app/src/main/res/layout/fragment_master_list.xml[m
[1mindex 5815935..36c2676 100755[m
[1m--- a/app/src/main/res/layout/fragment_master_list.xml[m
[1m+++ b/app/src/main/res/layout/fragment_master_list.xml[m
[36m@@ -1,45 +1,14 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
[31m-<!--Copyright (C) 2017 The Android Open Source Project[m
[31m- Licensed under the Apache License, Version 2.0 (the "License");[m
[31m- you may not use this file except in compliance with the License.[m
[31m- You may obtain a copy of the License at[m
[31m-  	http://www.apache.org/licenses/LICENSE-2.0[m
[31m- Unless required by applicable law or agreed to in writing, software[m
[31m- distributed under the License is distributed on an "AS IS" BASIS,[m
[31m- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m- See the License for the specific language governing permissions and[m
[31m- limitations under the License.-->[m
[31m-[m
[31m-<!-- GridView that displays AndroidMe images -->[m
[31m-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m<GridView[m
[32m+[m[32m    xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    android:id="@+id/images_grid_view"[m
     android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent"[m
[31m-    android:orientation="vertical">[m
[31m-[m
[31m-    <GridView[m
[31m-        xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-        android:id="@+id/images_grid_view"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="0dp"[m
[31m-        android:layout_weight="7"[m
[31m-        android:adjustViewBounds="true"[m
[31m-        android:columnWidth="180dp"[m
[31m-        android:gravity="center"[m
[31m-        android:horizontalSpacing="8dp"[m
[31m-        android:numColumns="3"[m
[31m-        android:padding="16dp"[m
[31m-        android:stretchMode="columnWidth"[m
[31m-        android:verticalSpacing="8dp">[m
[31m-    </GridView>[m
[31m-[m
[31m-    <!-- The "Next" button -->[m
[31m-    <Button[m
[31m-        android:id="@+id/next_button"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="0dp"[m
[31m-        android:layout_gravity="center_horizontal"[m
[31m-        android:layout_weight="1"[m
[31m-        android:text="Next" />[m
[31m-[m
[31m-[m
[31m-</LinearLayout>[m
\ No newline at end of file[m
[32m+[m[32m    android:layout_height="wrap_content"[m
[32m+[m[32m    android:adjustViewBounds="true"[m
[32m+[m[32m    android:columnWidth="180dp"[m
[32m+[m[32m    android:gravity="center"[m
[32m+[m[32m    android:horizontalSpacing="8dp"[m
[32m+[m[32m    android:numColumns="3"[m
[32m+[m[32m    android:padding="16dp"[m
[32m+[m[32m    android:stretchMode="columnWidth"[m
[32m+[m[32m    android:verticalSpacing="8dp"/>[m
[1mdiff --git a/build.gradle b/build.gradle[m
[1mindex 74b2ab0..5fe45f8 100644[m
[1m--- a/build.gradle[m
[1m+++ b/build.gradle[m
[36m@@ -3,6 +3,10 @@[m
 buildscript {[m
     repositories {[m
         jcenter()[m
[32m+[m[32m        maven {[m
[32m+[m[32m            url 'https://maven.google.com/'[m
[32m+[m[32m            name 'Google'[m
[32m+[m[32m        }[m
     }[m
     dependencies {[m
         classpath 'com.android.tools.build:gradle:2.2.3'[m
[36m@@ -15,6 +19,10 @@[m [mbuildscript {[m
 allprojects {[m
     repositories {[m
         jcenter()[m
[32m+[m[32m        maven {[m
[32m+[m[32m            url 'https://maven.google.com/'[m
[32m+[m[32m            name 'Google'[m
[32m+[m[32m        }[m
     }[m
 }[m
 [m
